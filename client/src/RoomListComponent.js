import React, { useState, useEffect, useRef } from 'react';
import { Typography, Snackbar, Alert, Card, CardContent, CardActions, Button, Box, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, MenuItem } from '@mui/material';

// —Ç–æ–ø–∏–∫–∏ (–∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
const topics = [
    { id: 1, title: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', icon: 'üíª', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö —Ç–µ–Ω–¥–µ–Ω—Ü–∏–π –∏ –∏–Ω–Ω–æ–≤–∞—Ü–∏–π' },
    { id: 2, title: '–ó–¥–æ—Ä–æ–≤—å–µ –∏ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ', icon: 'üè•', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Ç–µ–º, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–º –∏ –º–µ–Ω—Ç–∞–ª—å–Ω—ã–º –∑–¥–æ—Ä–æ–≤—å–µ–º' },
    { id: 3, title: '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ', icon: 'üìö', description: '–¢–µ–º—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –æ–±—É—á–µ–Ω–∏–µ–º –∏ –ª–∏—á–Ω–æ—Å—Ç–Ω—ã–º —Ä–æ—Å—Ç–æ–º' },
    { id: 4, title: '–ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –∫—É–ª—å—Ç—É—Ä–∞', icon: 'üé®', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞, –º—É–∑—ã–∫–∏, –∫–∏–Ω–æ –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π' },
    { id: 5, title: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', icon: '‚úàÔ∏è', description: '–¢–µ–º—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è–º–∏, –æ—Ç–∫—Ä—ã—Ç–∏—è–º–∏ –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º–∏' },
    { id: 6, title: '–≠–∫–æ–ª–æ–≥–∏—è –∏ —É—Å—Ç–æ–π—á–∏–≤–æ–µ —Ä–∞–∑–≤–∏—Ç–∏–µ', icon: 'üå±', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–≤ —ç–∫–æ–ª–æ–≥–∏–∏, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–∏—Ä–æ–¥—ã –∏ —É—Å—Ç–æ–π—á–∏–≤–æ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è' }
];

// —Å—É–±—Ç–æ–ø–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
const subtopics = {
    1: [
        { id: 101, title: '–ö–∞–∫ –ò–ò –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä—ã–Ω–æ–∫ —Ç—Ä—É–¥–∞?', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –∏ –≤—ã–∑–æ–≤–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏', tags: ['–ò–ò', '—Ä—ã–Ω–æ–∫ —Ç—Ä—É–¥–∞', '–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è'] },
        { id: 102, title: '–≠—Ç–∏–∫–∞ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π', description: '–ö–∞–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–≥—É—Ç —É—á–∏—Ç—ã–≤–∞—Ç—å –º–æ—Ä–∞–ª—å–Ω—ã–µ –∞—Å–ø–µ–∫—Ç—ã?', tags: ['—ç—Ç–∏–∫–∞', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞'] },
        { id: 103, title: '–†–∞–∑–≤–∏—Ç–∏–µ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤ –∫–≤–∞–Ω—Ç–æ–≤—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è', tags: ['–∫–≤–∞–Ω—Ç–æ–≤—ã–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è', '–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'] },
        { id: 104, title: '–ò–Ω—Ç–µ—Ä–Ω–µ—Ç –≤–µ—â–µ–π (IoT)', description: '–ö–∞–∫ —Å–º–∞—Ä—Ç-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –º–µ–Ω—è—é—Ç –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω—É—é –∂–∏–∑–Ω—å', tags: ['IoT', '—Å–º–∞—Ä—Ç —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'] },
        { id: 105, title: '–ö–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', description: '–ú–µ—Ç–æ–¥—ã –∑–∞—â–∏—Ç—ã –æ—Ç —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —É–≥—Ä–æ–∑ –∏ –∫–∏–±–µ—Ä–∞—Ç–∞–∫', tags: ['–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '–∫–∏–±–µ—Ä–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏'] }
    ],
    2: [
        { id: 201, title: '–ó–¥–æ—Ä–æ–≤–æ–µ –ø–∏—Ç–∞–Ω–∏–µ', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∏—Ç–∞–Ω–∏—è –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏–µ—Ç', tags: ['–ø–∏—Ç–∞–Ω–∏–µ', '–∑–¥–æ—Ä–æ–≤—å–µ', '–¥–∏–µ—Ç–∞'] },
        { id: 202, title: '–§–∏–∑–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', description: '–ü–æ–ª—å–∑–∞ —Å–ø–æ—Ä—Ç–∞ –∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞ –∂–∏–∑–Ω–∏', tags: ['—Å–ø–æ—Ä—Ç', '—Ñ–∏—Ç–Ω–µ—Å', '–∑–¥–æ—Ä–æ–≤—å–µ'] },
        { id: 203, title: '–ü—Å–∏—Ö–∏—á–µ—Å–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ', description: '–°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—é –º–µ–Ω—Ç–∞–ª—å–Ω–æ–≥–æ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏—è', tags: ['–ø—Å–∏—Ö–æ–ª–æ–≥–∏—è', '–∑–¥–æ—Ä–æ–≤—å–µ', '–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –±–ª–∞–≥–æ–ø–æ–ª—É—á–∏–µ'] },
        { id: 204, title: '–ú–µ–¥–∏—Ç–∞—Ü–∏—è –∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è', description: '–¢–µ—Ö–Ω–∏–∫–∏ –¥–ª—è —Å–Ω–∏–∂–µ–Ω–∏—è —Å—Ç—Ä–µ—Å—Å–∞ –∏ —É–ª—É—á—à–µ–Ω–∏—è —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è', tags: ['–º–µ–¥–∏—Ç–∞—Ü–∏—è', '—Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è', '–∑–¥–æ—Ä–æ–≤—å–µ'] },
        { id: 205, title: '–ü—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏–π', description: '–°–æ–≤–µ—Ç—ã –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é –∑–¥–æ—Ä–æ–≤—å—è –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—é –±–æ–ª–µ–∑–Ω–µ–π', tags: ['–ø—Ä–æ—Ñ–∏–ª–∞–∫—Ç–∏–∫–∞', '–∑–¥–æ—Ä–æ–≤—å–µ', '–º–µ–¥–∏—Ü–∏–Ω–∞'] }
    ],
    3: [
        { id: 301, title: '–û–Ω–ª–∞–π–Ω-–∫—É—Ä—Å—ã', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –¥–∏—Å—Ç–∞–Ω—Ü–∏–æ–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è', tags: ['–æ–Ω–ª–∞–π–Ω', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–∫—É—Ä—Å—ã'] },
        { id: 302, title: '–ß—Ç–µ–Ω–∏–µ –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', description: '–û–±–º–µ–Ω —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –∫–Ω–∏–≥–∞–º –∏ –ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–µ', tags: ['–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '—á—Ç–µ–Ω–∏–µ', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'] },
        { id: 303, title: '–Ø–∑—ã–∫–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ', description: '–ú–µ—Ç–æ–¥—ã –∏ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã—Ö —è–∑—ã–∫–æ–≤', tags: ['—è–∑—ã–∫–∏', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '—Å–∞–º–æ—Ä–∞–∑–≤–∏—Ç–∏–µ'] },
        { id: 304, title: '–ù–∞–≤—ã–∫–∏ –±—É–¥—É—â–µ–≥–æ', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–º –º–∏—Ä–µ', tags: ['–Ω–∞–≤—ã–∫–∏', '–±—É–¥—É—â–µ–µ', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ'] },
        { id: 305, title: '–û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', description: '–í–ª–∏—è–Ω–∏–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –Ω–∞ –º–µ—Ç–æ–¥—ã –æ–±—É—á–µ–Ω–∏—è', tags: ['—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ', '–∏–Ω–Ω–æ–≤–∞—Ü–∏–∏'] }
    ],
    4: [
        { id: 401, title: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ç–µ—á–µ–Ω–∏–π –∏ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –≤ –∏—Å–∫—É—Å—Å—Ç–≤–µ', tags: ['–∏—Å–∫—É—Å—Å—Ç–≤–æ', '—Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–µ', '–∫—É–ª—å—Ç—É—Ä–∞'] },
        { id: 402, title: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –º—É–∑—ã–∫–∞', description: '–î–∏—Å–∫—É—Å—Å–∏–∏ –æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è—Ö –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–π –º—É–∑—ã–∫–∏', tags: ['–º—É–∑—ã–∫–∞', '–∫–ª–∞—Å—Å–∏–∫–∞', '–∏—Å–∫—É—Å—Å—Ç–≤–æ'] },
        { id: 403, title: '–ö–∏–Ω–æ –∏ —Ç–µ–∞—Ç—Ä', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –Ω–æ–≤–∏–Ω–æ–∫ –∫–∏–Ω–æ –∏ —Ç–µ–∞—Ç—Ä–∞–ª—å–Ω—ã—Ö –ø–æ—Å—Ç–∞–Ω–æ–≤–æ–∫', tags: ['–∫–∏–Ω–æ', '—Ç–µ–∞—Ç—Ä', '–∏—Å–∫—É—Å—Å—Ç–≤–æ'] },
        { id: 404, title: '–õ–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞ –∏ –ø–æ—ç–∑–∏—è', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∫–Ω–∏–≥, –ø–æ—ç–∑–∏–∏ –∏ —Ç–≤–æ—Ä—á–µ—Å–∫–æ–≥–æ –ø–∏—Å—å–º–∞', tags: ['–ª–∏—Ç–µ—Ä–∞—Ç—É—Ä–∞', '–ø–æ—ç–∑–∏—è', '–∏—Å–∫—É—Å—Å—Ç–≤–æ'] },
        { id: 405, title: '–ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –Ω–∞—Å–ª–µ–¥–∏–µ', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π –∏ –Ω–∞—Å–ª–µ–¥–∏—è', tags: ['–Ω–∞—Å–ª–µ–¥–∏–µ', '—Ç—Ä–∞–¥–∏—Ü–∏–∏', '–∫—É–ª—å—Ç—É—Ä–∞'] }
    ],
    5: [
        { id: 501, title: '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ª—É—á—à–∏—Ö –º–µ—Å—Ç –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π', tags: ['–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è', '–æ—Ç–¥—ã—Ö'] },
        { id: 502, title: '–ö—É–ª—å—Ç—É—Ä–Ω—ã–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', description: '–ü–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –∫—É–ª—å—Ç—É—Ä—É —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω', tags: ['–∫—É–ª—å—Ç—É—Ä–∞', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–æ—Ç–¥—ã—Ö'] },
        { id: 503, title: '–ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–π —Ç—É—Ä–∏–∑–º', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã—Ö –∏ –ø—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤', tags: ['–ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è', '—Ç—É—Ä–∏–∑–º', '–æ—Ç–¥—ã—Ö'] },
        { id: 504, title: '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è —Å —Å–µ–º—å–µ–π', description: '–°–æ–≤–µ—Ç—ã –∏ –æ–ø—ã—Ç –¥–ª—è —Å–µ–º–µ–π–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫', tags: ['—Å–µ–º—å—è', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–æ—Ç–¥—ã—Ö'] },
        { id: 505, title: '–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –ª—É—á—à–∏—Ö —Å–Ω–∏–º–∫–æ–≤ –∏ —Ç–µ—Ö–Ω–∏–∫ —Ñ–æ—Ç–æ–æ—Ç—á–µ—Ç–∞', tags: ['—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è', '–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–∏—Å–∫—É—Å—Å—Ç–≤–æ'] }
    ],
    6: [
        { id: 601, title: '–í–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º–∞—è —ç–Ω–µ—Ä–≥–∏—è', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —ç–Ω–µ—Ä–≥–∏–∏ –∏ –∏—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤', tags: ['—ç–Ω–µ—Ä–≥–∏—è', '—ç–∫–æ–ª–æ–≥–∏—è', '—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å'] },
        { id: 602, title: '–≠–∫–æ-–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã', description: '–ü—Ä–æ–µ–∫—Ç—ã –∏ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã –ø–æ –∑–∞—â–∏—Ç–µ –æ–∫—Ä—É–∂–∞—é—â–µ–π —Å—Ä–µ–¥—ã', tags: ['—ç–∫–æ–ª–æ–≥–∏—è', '–∏–Ω–∏—Ü–∏–∞—Ç–∏–≤—ã', '–ø—Ä–∏—Ä–æ–¥–∞'] },
        { id: 603, title: '–ó–µ–ª–µ–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', description: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—â–∏–µ —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏ —á–∏—Å—Ç–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é', tags: ['–∑–µ–ª–µ–Ω—ã–µ', '—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏', '—ç–∫–æ–ª–æ–≥–∏—è'] },
        { id: 604, title: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è', description: '–ú–µ—Ç–æ–¥—ã –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—é –ø—Ä–∏—Ä–æ–¥–Ω–æ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è', tags: ['–±–∏–æ—Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ', '–ø—Ä–∏—Ä–æ–¥–∞', '—ç–∫–æ–ª–æ–≥–∏—è'] },
        { id: 605, title: '–£—Å—Ç–æ–π—á–∏–≤–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ', description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ —ç–∫–æ–ª–æ–≥–∏—á–Ω—ã—Ö –ø–æ–¥—Ö–æ–¥–æ–≤ –∫ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—é –∏ –æ–±—Ä–∞–∑—É –∂–∏–∑–Ω–∏', tags: ['–ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ', '—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å', '—ç–∫–æ–ª–æ–≥–∏—è'] }
    ]
};

const RoomListComponent = ({ onJoinRoom }) => {
    const [rooms, setRooms] = useState([]);
    const [error, setError] = useState(null);
    const [openDialog, setOpenDialog] = useState(false);
    const [selectedRoomId, setSelectedRoomId] = useState(null);
    const [password, setPassword] = useState('');

    // —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ —Ç–æ–ø–∏–∫—É –∏ —Å—É–±—Ç–æ–ø–∏–∫—É (0 = "–í—Å–µ")
    const [filterTopic, setFilterTopic] = useState(0);
    const [filterSubtopic, setFilterSubtopic] = useState(0);

    // –∏—Å–ø–æ–ª—å–∑—É–µ–º ref –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è WebSocket-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    const socketRef = useRef(null);

    useEffect(() => {
        const socket = new WebSocket('ws://127.0.0.1:8080/roomUpdates');
        socketRef.current = socket;

        socket.onopen = () => {
            console.log('Connected to the WebSocket server for room updates');
            // –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∑–∞–ø—Ä–æ—Å —Å —Ñ–∏–ª—å—Ç—Ä–æ–º
            sendFilterUpdate(filterTopic, filterSubtopic);
        };

        socket.onmessage = (event) => {
            const data = JSON.parse(event.data);
            if (data.type === 'roomList') {
                setRooms(data.rooms);
            }
        };

        socket.onerror = (error) => {
            console.error('WebSocket error:', error);
            setError('WebSocket error. Check console for more details.');
        };

        socket.onclose = () => {
            console.log('WebSocket connection closed');
        };

        return () => {
            socket.close();
        };
    }, []);

    const sendFilterUpdate = (topic, subtopic) => {
        if (socketRef.current && socketRef.current.readyState === WebSocket.OPEN) {
            const filterData = {
                type: 'filter',
                topic: topic,       // topic id –∏–ª–∏ 0 (–≤—Å–µ —Ç–æ–ø–∏–∫–∏)
                subtopic: subtopic  // subtopic id –∏–ª–∏ 0 (–≤—Å–µ —Å—É–±—Ç–æ–ø–∏–∫–∏)
            };
            socketRef.current.send(JSON.stringify(filterData));
        }
    };

    const handleFilterTopicChange = (e) => {
        const newTopic = parseInt(e.target.value);
        setFilterTopic(newTopic);
        // –ø—Ä–∏ —Å–º–µ–Ω–µ —Ç–æ–ø–∏–∫–∞ —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –ø–æ —Å—É–±—Ç–æ–ø–∏–∫—É
        setFilterSubtopic(0);
        sendFilterUpdate(newTopic, 0);
    };

    const handleFilterSubtopicChange = (e) => {
        const newSubtopic = parseInt(e.target.value);
        setFilterSubtopic(newSubtopic);
        sendFilterUpdate(filterTopic, newSubtopic);
    };

    const handleJoinRoomClick = (room) => {
        if (room.open) {
            onJoinRoom(room.id);
        } else {
            setSelectedRoomId(room.id);
            setOpenDialog(true);
        }
    };

    const getTopicNameById = (topicId) => {
        const topic = topics.find(t => t.id === topicId);
        return topic ? `${topic.icon} ${topic.title}` : 'N/A';
    };

    const getSubtopicNameById = (topicId, subtopicId) => {
        if (!topicId || !subtopicId) return 'N/A';
        const subtopicGroup = subtopics[topicId];
        if (!subtopicGroup) return 'N/A';
        const subtopic = subtopicGroup.find(s => s.id === subtopicId);
        return subtopic ? subtopic.title : 'N/A';
    };

    const handleDialogClose = () => {
        setOpenDialog(false);
        setPassword('');
        setSelectedRoomId(null);
    };

    const handleJoinRoomWithPassword = () => {
        if (selectedRoomId !== null) {
            onJoinRoom(selectedRoomId, password);
            handleDialogClose();
        }
    };

    return (
        <>
            <Typography component="h2" variant="h6" gutterBottom>
                Filter Rooms
            </Typography>
            <Box display="flex" gap={2} mb={2}>
                <TextField
                    select
                    label="Topic"
                    value={filterTopic}
                    onChange={handleFilterTopicChange}
                >
                    <MenuItem value={0}>All Topics</MenuItem>
                    {topics.map((topic) => (
                        <MenuItem key={topic.id} value={topic.id}>
                            {topic.icon} {topic.title}
                        </MenuItem>
                    ))}
                </TextField>
                <TextField
                    select
                    label="Subtopic"
                    value={filterSubtopic}
                    onChange={handleFilterSubtopicChange}
                    disabled={filterTopic === 0}
                >
                    <MenuItem value={0}>All Subtopics</MenuItem>
                    {filterTopic !== 0 &&
                        subtopics[filterTopic]?.map((sub) => (
                            <MenuItem key={sub.id} value={sub.id}>
                                {sub.title}
                            </MenuItem>
                        ))}
                </TextField>
            </Box>

            <Typography component="h2" variant="h6">
                Available Rooms
            </Typography>
            <Box display="flex" flexDirection="column" gap={2}>
                {rooms.map((room) => (
                    <Card key={room.id} variant="outlined">
                        <CardContent>
                            <Typography variant="h5" component="div">
                                {room.name}
                            </Typography>
                            <Typography color="textSecondary">
                                Room ID: {room.id}
                            </Typography>
                            <Typography color="textSecondary">
                                {room.open ? 'Open' : 'Closed'}
                            </Typography>
                            <Typography variant="body2">
                                Users: {room.users}/{room.maxUsers}
                            </Typography>
                            {/* –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏: */}
                            <Typography color="textSecondary">
                                Topic: {getTopicNameById(room.topic)}
                            </Typography>
                            <Typography color="textSecondary">
                                Subtopic: {getSubtopicNameById(room.topic, room.subtopic)}
                            </Typography>
                        </CardContent>
                        <CardActions>
                            <Button size="small" onClick={() => handleJoinRoomClick(room)}>
                                Join Room
                            </Button>
                        </CardActions>
                    </Card>
                ))}
            </Box>
            {error && (
                <Snackbar open={true} autoHideDuration={6000} onClose={() => setError(null)}>
                    <Alert onClose={() => setError(null)} severity="error">
                        {error}
                    </Alert>
                </Snackbar>
            )}
            <Dialog open={openDialog} onClose={handleDialogClose}>
                <DialogTitle>Enter Password</DialogTitle>
                <DialogContent>
                    <DialogContentText>
                        This room is closed. Please enter the password to join.
                    </DialogContentText>
                    <TextField
                        autoFocus
                        margin="dense"
                        label="Password"
                        type="password"
                        fullWidth
                        value={password}
                        onChange={(e) => setPassword(e.target.value)}
                    />
                </DialogContent>
                <DialogActions>
                    <Button onClick={handleDialogClose} color="primary">
                        Cancel
                    </Button>
                    <Button onClick={handleJoinRoomWithPassword} color="primary">
                        Join
                    </Button>
                </DialogActions>
            </Dialog>
        </>
    );
};

export default RoomListComponent;